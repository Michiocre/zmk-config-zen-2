#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/bt.h>

/ {
    chosen {
        zmk,matrix_transform = &default_transform;
        //zmk,matrix_transform = &five_column_transform;
    };

    behaviors {
        td0: tap_dance_0 {
            compatible = "zmk,behavior-tap-dance";
            label = "TAP_DANCE_0";
            #binding-cells = <0>;
            tapping-term-ms = <180>;
            bindings = <&mo 1>, <&kp LGUI>;
        };
    };
};

/ {
        keymap {
                compatible = "zmk,keymap";

                default_layer {
                        label = "QWERTY";
// -----------------------------------------------------------------------------------------
// |  TAB |  Q  |  W  |  E  |  R   |  T  ||  Y  |  U   |  I  |  O  |  P  | ESC |
// | MINUS|  A  |  S  |  D  |  F   |  G  ||  H  |  J   |  K  |  L  |  ;  |  '  |
// | SHFT |  Z  |  X  |  C  |  V   |  B  ||  N  |  M   |  ,  |  .  |  /  | RET |
//                    | LALT| CTRL | SPC || BSPC| RSE  | GUI |
                        bindings = <
   &kp TAB   &kp Q &kp W &kp E &kp R &kp T   &kp Y &kp U  &kp I     &kp O   &kp P    &kp ESC
   &kp MINUS &kp A &kp S &kp D &kp F &kp G   &kp H &kp J  &kp K     &kp L   &kp SEMI &kp SQT
   &kp LSHFT &kp Z &kp X &kp C &kp V &kp B   &kp N &kp M  &kp COMMA &kp DOT &kp FSLH &kp RET
             &kp LALT  &kp LCTRL &kp SPACE   &kp BSPC &mo 2 &td0
                        >;
                };
                
                lower_layer {
                        label = "NUMBER";
// -----------------------------------------------------------------------------------------
// |     |     | INS |HOME |PG_UP|     ||    |    |    |PSCRN|SLCK |PAUSE_BREAK|
// |     |     | DEL | END |PG_DN|     ||    |    |    |LBKT | UP  |   RBKT    |
// |     |     |     |     |     |     ||    |    |    |LEFT |DOWN |   RIGHT   |
//                   |     |     |     ||    |mo 3|    |
                        bindings = <
  &trans &trans &kp INS &kp HOME &kp PG_UP &trans  &trans &trans &trans &kp PSCRN &kp SLCK &kp PAUSE_BREAK
  &trans &trans &kp DEL &kp END  &kp PG_DN &trans  &trans &trans &trans &kp LBKT  &kp UP   &kp RBKT
  &trans &trans &trans  &trans   &trans    &trans  &trans &trans &trans &kp LEFT  &kp DOWN &kp RIGHT
                        &trans   &trans    &trans  &trans &mo 3  &trans
                        >;
                };
                
                raise_layer {
                        label = "SYMBOL";
// -----------------------------------------------------------------------------------------
// |    |CAPS| F1 | F2 | F3 | F4 ||NUBS|  7 |  8  |  9  |  0  | DEL |
// |NUHS|    | F5 | F6 | F7 | F8 ||LBKT|  4 |  5  |  6  |MINUS|EQUAL|
// |    |    | F9 | F10| F11| F12||RBKT|  1 |  2  |  3  | DOT |GRAVE|
//                |    |    |    ||    |    |  ~  |
                        bindings = <
  &trans     &kp CAPS &kp F1 &kp F2  &kp F3  &kp F4  &kp NUBS &kp N7 &kp N8 &kp N9 &kp N0    &kp DEL
  &kp NUHS   &trans   &kp F5 &kp F6  &kp F7  &kp F8  &kp LBKT &kp N4 &kp N5 &kp N6 &kp MINUS &kp EQUAL 
  &trans     &trans   &kp F9 &kp F10 &kp F11 &kp F12 &kp RBKT &kp N1 &kp N2 &kp N3 &kp DOT   &kp GRAVE 
                         &trans  &trans   &trans &trans &trans &kp TILDE2
                        >;
                };

                bt_layer {
                        label = "BLUETOOTH";
// -----------------------------------------------------------------------------------------
// |    |BT 1|BT 2|BT 3|BT 4|BT 5||    |    |    |    |    |BT CLR|
// |    |    |    |    |    |    ||    |    |    |    |    |      |
// |    |    |    |    |    |    ||    |    |    |    |    |      |
//                |    |    |    ||    |    |    |
                        bindings = <
   &trans &bt BT_SEL 0 &bt BT_SEL 1 &bt BT_SEL 2 &bt BT_SEL 3 &bt BT_SEL 4  &trans &trans &trans &trans &trans &bt  BT_CLR 
   &trans &trans       &trans       &trans       &trans       &trans        &trans &trans &trans &trans &trans &trans
   &trans &trans       &trans       &trans       &trans       &trans        &trans &trans &trans &trans &trans &trans
                                    &trans       &trans       &trans        &trans &trans &trans
                        >;
                };
        };
};
